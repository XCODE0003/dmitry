const mysql = require('mysql2/promise');
const moment = require('moment');
const dotenv = require('dotenv');
const { Telegraf } = require('telegraf');
const path = require('path');
const fs = require('fs');

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞
const projectRoot = '/var/www/html';
const envPath = path.join(projectRoot, '.env');

console.log('–ü—É—Ç—å –∫ .env —Ñ–∞–π–ª—É:', envPath);
console.log('–§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', fs.existsSync(envPath));

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
dotenv.config({ path: envPath });

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
console.log('DB_HOST:', process.env.DB_HOST);
console.log('DB_PORT:', process.env.DB_PORT);
console.log('DB_USERNAME:', process.env.DB_USERNAME);
console.log('DB_DATABASE:', process.env.DB_DATABASE);

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MySQL
const dbConfig = {
  host: process.env.DB_HOST || '127.0.0.1',
  port: process.env.DB_PORT || 3306,
  user: process.env.DB_USERNAME || 'root',
  password: process.env.DB_PASSWORD || 'dmitry',
  database: process.env.DB_DATABASE || 'dmitry',
};

console.log('DB Config:', {
  host: dbConfig.host,
  port: dbConfig.port,
  user: dbConfig.user,
  database: dbConfig.database
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ Telegram
const botToken = process.env.TELEGRAM_BOT_TOKEN || '7224607757:AAEq4qW8ugEnZ99Fkgzh7B-1FtCv_r1mN-E';
const bot = new Telegraf(botToken);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫
async function checkCompletedDeals() {
  let connection;
  
  try {
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    connection = await mysql.createConnection(dbConfig);
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ UNIX timestamp
    const currentTimestamp = Math.floor(Date.now() / 1000);
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–¥–µ–ª–∫–∏ —Å —Ç–∏–ø–æ–º "fixed", —É –∫–æ—Ç–æ—Ä—ã—Ö –∏—Å—Ç–µ–∫ —Å—Ä–æ–∫
    const [deals] = await connection.execute(`
      SELECT d.* 
      FROM deals d
      JOIN bundles b ON d.bundle_id = b.id
      WHERE d.status = "active" 
        AND d.date_end <= ? 
        AND d.notify_send = 0
        AND b.type = "fixed"
    `, [currentTimestamp]);
    
    console.log(`–ù–∞–π–¥–µ–Ω–æ ${deals.length} –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ —Å —Ç–∏–ø–æ–º "fixed"`);
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—É—é —Å–¥–µ–ª–∫—É
    for (const deal of deals) {
      try {
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤—è–∑–∫–µ (bundle)
        const [bundles] = await connection.execute(
          'SELECT * FROM bundles WHERE id = ?',
          [deal.bundle_id]
        );
        
        const bundle = bundles[0];
        
        if (!bundle) {
          console.error(`–°–≤—è–∑–∫–∞ —Å ID ${deal.bundle_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è —Å–¥–µ–ª–∫–∏ ${deal.id}`);
          continue;
        }
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await bot.telegram.sendMessage(
          deal.user_id,
          `‚úÖ –í–∞—à–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n` +
          `üí∞ –°—É–º–º–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏: ${deal.amount} USDT\n` +
          `üí∏ –ü—Ä–∏–±—ã–ª—å: ${deal.profit} USDT\n` +
          `üìä –û–±—â–∞—è —Å—É–º–º–∞: ${parseFloat(deal.amount) + parseFloat(deal.profit)} USDT\n\n` +
          `–ß—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–í —Ä–∞–±–æ—Ç–µ" –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–í—ã–≤–µ—Å—Ç–∏"`
        );

        await connection.execute(
          'UPDATE deals SET notify_send = 1 WHERE id = ?',
          [deal.id]
        );
        
        console.log(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${deal.user_id} –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏ ${deal.id}`);
        
      } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–¥–µ–ª–∫–∏ ${deal.id}:`, error);
      }
    }
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫:', error);
  } finally {
    if (connection) {
      await connection.end();
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
setInterval(checkCompletedDeals, 60000);

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ä–∞–∑—É –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ —Å–∫—Ä–∏–ø—Ç–∞
checkCompletedDeals();

console.log('–°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ –∑–∞–ø—É—â–µ–Ω');
